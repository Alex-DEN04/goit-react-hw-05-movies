{"version":3,"file":"static/js/775.8c64eea7.chunk.js","mappings":"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","sources":["api/api.jsx","components/Box.jsx","components/Card/CardStyled.jsx","components/Card/Card.jsx","pages/MovieDetails/MovieDetalisStyled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f895f2516a047e2a437ac29e4da65e26';\nconst trendingPeriod = '/trending/movie/day';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`${BASE_URL}${trendingPeriod}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nexport const searchMovie = async searchQuery => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response;\n};\n","import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow\n);\n","import styled from '@emotion/styled';\n\nexport const Poster = styled.img`\n  max-width: 350px;\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\nexport const Overviev = styled.h3`\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Text = styled.p`\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Genres = styled.h3`\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Genre = styled.li`\n  display: block;\n  list-style-type: none;\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\n\nimport { Poster, Genres, Genre, Overviev, Text } from './CardStyled';\nconst posterUrl = 'https://image.tmdb.org/t/p/w500';\nconst poster = 'https://darth-shop.ru/pictures/product/big/7759_big.jpg';\n\nexport const Card = ({\n  movie: {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => {\n  return (\n    <>\n      <Box display=\"flex\" boxShadow=\"0 4px 2px -2px gray\" pb={3}>\n        {poster_path ? (\n          <Poster src={`${posterUrl}${poster_path}`} alt=\"Poster\" />\n        ) : (\n          <Poster src={poster} alt=\"Poster\" />\n        )}\n        <Box ml={5}>\n          <h2>\n            {title || original_title} ({release_date.slice(0, 4)})\n          </h2>\n          <p>User Score: {Math.round((Number(vote_average) * 100) / 10)} %</p>\n\n          <Overviev>Overviev:</Overviev>\n          <Text>{overview}</Text>\n          <Genres>Genres:</Genres>\n          <Box m={0} p={0} display=\"flex\" as=\"ul\">\n            {genres.map(genre => (\n              <Genre key={genre.id}>{genre.name}</Genre>\n            ))}\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nCard.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: auto;\n  height: auto;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.buttonColor};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.borderColor};\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.buttonAccentColor};\n  }\n`;\n","import {\n  useParams,\n  useNavigate,\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { getMovieById } from 'api/api';\nimport { Card } from '../../components/Card/Card';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Button } from './MovieDetalisStyled';\nimport { Box } from 'components/Box';\n\nconst MovieDetails = () => {\n  const [state, setState] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getMovieById(movieId);\n        setState(data);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n    return () => {\n      setState(null);\n      setError(null);\n    };\n  }, [movieId]);\n\n  const goBack = () => navigate(location.state.from);\n  return (\n    <>\n      <Button onClick={goBack}>\n        <BsArrowLeft />\n        Go back\n      </Button>\n      {error && <div>Now showing product with id - {movieId}</div>}\n\n      {state && (\n        <>\n          <Card movie={state} />\n          <div>\n            <p>Additional information:</p>\n            <Box boxShadow=\"0 4px 2px -2px gray\" pb={3} as=\"ul\">\n              <li>\n                <NavLink to={'cast'} state={{ from: location.state.from }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'} state={{ from: location.state.from }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </Box>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getMovies","axios","params","api_key","response","data","results","getMovieById","id","getMovieCredits","getMovieReviews","searchMovie","searchQuery","query","Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","Poster","p","theme","Overviev","Text","Genres","Genre","Card","movie","poster_path","title","original_title","release_date","vote_average","overview","genres","display","boxShadow","pb","src","alt","ml","slice","Math","round","Number","m","as","map","genre","name","Button","colors","buttonColor","radii","normal","borderColor","buttonAccentColor","useState","state","setState","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovie","onClick","from","to","Suspense","fallback","Loader"],"sourceRoot":""}