{"version":3,"file":"static/js/517.e2fdd4cd.chunk.js","mappings":"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","sources":["api/api.jsx","pages/MovieDetails/MovieDetalisStyled.jsx","components/Box.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst trendingPeriod = '/trending/movie/day';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`${BASE_URL}${trendingPeriod}`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const searchMovie = async searchQuery => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n      query: searchQuery,\n    },\n  });\n  return response;\n};\n","import styled from '@emotion/styled';\n\nexport const Poster = styled.img`\n  max-width: 350px;\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  width: auto;\n  height: auto;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.buttonColor};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.borderColor};\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.buttonAccentColor};\n  }\n`;\nexport const Genres = styled.h3``;\n\nexport const Genre = styled.li`\n  display: block;\n  list-style-type: none;\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n","import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow\n);\n","import {\n  useParams,\n  useNavigate,\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { getMovieById } from 'api/api';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Poster, Button, Genres, Genre } from './MovieDetalisStyled';\nimport { Box } from 'components/Box';\n\nconst MovieDetails = () => {\n  const [state, setState] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const posterUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getMovieById(movieId);\n        setState(data);\n        setError(null);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const goBack = () => navigate(location.state.from);\n  return (\n    <>\n      <Button onClick={goBack}>\n        <BsArrowLeft />\n        Go back\n      </Button>\n      {error && <div>Now showing product with id - {movieId}</div>}\n\n      {state && (\n        <>\n          <Box display=\"flex\" boxShadow=\"0 4px 2px -2px gray\" pb={3}>\n            <Poster src={`${posterUrl}${state.poster_path}`} alt=\"\" />\n            <Box ml={5}>\n              <h2>\n                {state.title} ({state.release_date.slice(0, 4)})\n              </h2>\n              <p>\n                User Score:{' '}\n                {Math.round((Number(state.vote_average) * 100) / 10)} %\n              </p>\n\n              <h3>Overviev:</h3>\n              <p>{state.overview}</p>\n              <Genres>Genres:</Genres>\n              <Box m={0} p={0} display=\"flex\" as=\"ul\">\n                {state.genres.map(genre => (\n                  <Genre key={genre.id}>{genre.name}</Genre>\n                ))}\n              </Box>\n            </Box>\n          </Box>\n          <div>\n            <p>Additional information:</p>\n            <Box boxShadow=\"0 4px 2px -2px gray\" pb={3} as=\"ul\">\n              <li>\n                <NavLink to={'cast'} state={{ from: location.state.from }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'} state={{ from: location.state.from }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </Box>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","getMovies","axios","params","api_key","response","data","results","getMovieById","id","getMovieCredits","getMovieReviews","searchMovie","searchQuery","query","Poster","styled","p","theme","space","Button","colors","buttonColor","radii","normal","borderColor","buttonAccentColor","Genres","Genre","Box","color","layout","flexbox","grid","background","border","position","shadow","useState","state","setState","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovie","onClick","from","display","boxShadow","pb","src","poster_path","alt","ml","title","release_date","slice","Math","round","Number","vote_average","overview","m","as","genres","map","genre","name","to","Suspense","fallback","Loader"],"sourceRoot":""}