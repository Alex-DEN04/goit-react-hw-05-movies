{"version":3,"file":"static/js/297.de3d77aa.chunk.js","mappings":"4TAEMA,EAAW,+BAGJC,EAAS,mCAAG,oGACAC,IAAAA,IAAA,UAAaF,GAAb,OAHF,uBAG4C,CAC/DG,OAAQ,CACNC,QAAS,sCAHU,cACjBC,EADiB,yBAMhBA,EAASC,KAAKC,SANE,2CAAH,qDASTC,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,GAAM,CAC1DN,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAMnBA,GANmB,2CAAH,sDASZK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,YAA6C,CAClEN,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,GANsB,2CAAH,sDASfM,EAAe,mCAAG,WAAMF,GAAN,uFACNP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,YAA6C,CAClEN,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,GANsB,2CAAH,sDASfO,EAAW,mCAAG,WAAMC,GAAN,uFACFX,IAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAAS,mCACTU,MAAOD,KAJc,cACnBR,EADmB,yBAOlBA,GAPkB,2CAAH,qD,sJCvCXU,E,QAAWC,EAAAA,IAAH,yC,mBCqDrB,EAhDa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAECjB,EAAAA,EAAAA,IAAgBc,GAFjB,gBAEdlB,EAFc,EAEdA,KACRa,EAASb,GAHa,gDAKtBe,EAAS,EAAD,IALc,yBAOtBE,GAAW,GAPW,4EAAH,qDAYvB,OAFAI,IAEO,WACLR,EAAS,MACTE,EAAS,KACV,CACF,GAAE,CAACG,KAGF,gCACGF,IAAW,SAACM,EAAA,EAAD,IACXV,IACC,wBACGA,EAAMW,KAAKC,KAAI,SAAAC,GAAI,OAClB,0BACGA,EAAKC,eACJ,SAACjB,EAAD,CACEkB,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAI,MAGR,uBAAIH,EAAKI,QACT,uCAAeJ,EAAKK,eARbL,EAAKtB,GADI,MAJ1B,IAkBIW,IAAS,wEAGhB,C","sources":["api/api.jsx","pages/MovieDetails/Cast/CastStyled.jsx","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst trendingPeriod = '/trending/movie/day';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`${BASE_URL}${trendingPeriod}`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n    },\n  });\n  return response;\n};\n\nexport const searchMovie = async searchQuery => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: 'f895f2516a047e2a437ac29e4da65e26',\n      query: searchQuery,\n    },\n  });\n  return response;\n};\n","import styled from '@emotion/styled';\n\nexport const ActorImg = styled.img`\n  width: 150px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from 'api/api';\nimport { ActorImg } from './CastStyled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [state, setState] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const { data } = await getMovieCredits(movieId);\n        setState(data);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieCredits();\n\n    return () => {\n      setState(null);\n      setError(null);\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {state && (\n        <ul>\n          {state.cast.map(item => (\n            <li key={item.id}>\n              {item.profile_path && (\n                <ActorImg\n                  src={`https://image.tmdb.org/t/p/w300${item.profile_path}`}\n                  alt=\"\"\n                />\n              )}\n              <p>{item.name}</p>\n              <p>Character: {item.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      ;{error && <div> Something went wrong, please try again </div>}\n    </>\n  );\n};\nexport default Cast;"],"names":["BASE_URL","getMovies","axios","params","api_key","response","data","results","getMovieById","id","getMovieCredits","getMovieReviews","searchMovie","searchQuery","query","ActorImg","styled","useState","state","setState","error","setError","loading","setLoading","movieId","useParams","useEffect","fetchMovieCredits","Loader","cast","map","item","profile_path","src","alt","name","character"],"sourceRoot":""}